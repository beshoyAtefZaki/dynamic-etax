# Generated by Django 3.2.5 on 2024-12-28 13:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('payer', '0001_initial'),
        ('tax', '0001_initial'),
        ('item', '0001_initial'),
        ('home', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InoiveFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=250, null=True)),
                ('sheet', models.FileField(upload_to='uploader')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankName', models.CharField(blank=True, max_length=250, null=True)),
                ('bankAddress', models.CharField(blank=True, max_length=250, null=True)),
                ('bankAccountNo', models.CharField(blank=True, max_length=250, null=True)),
                ('bankAccountIBAN', models.CharField(blank=True, max_length=250, null=True)),
                ('swiftCode', models.CharField(blank=True, max_length=250, null=True)),
                ('terms', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('itemType', models.CharField(blank=True, max_length=250, null=True)),
                ('itemCode', models.CharField(blank=True, max_length=250, null=True)),
                ('unitType', models.CharField(blank=True, choices=[('2Z', 'Millivolt ( mV )'), ('4K', 'Milliampere ( mA )'), ('4O', 'Microfarad ( microF )'), ('A87', 'Gigaohm ( GOhm )'), ('A93', 'Gram/Cubic meter ( g/m3 )'), ('A94', 'Gram/cubic centimeter ( g/cm3 )'), ('AMP', 'Ampere ( A )'), ('ANN', 'Years ( yr )'), ('B22', 'Kiloampere ( kA )'), ('B49', 'Kiloohm ( kOhm )'), ('B75', 'Megohm ( MOhm )'), ('B78', 'Megavolt ( MV )'), ('B84', 'Microampere ( microA )'), ('BAR', 'bar ( bar )'), ('BBL', 'Barrel (oil 42 gal.)'), ('BG', 'Bag ( Bag )'), ('BO', 'Bottle ( Bt. )'), ('BOX', 'Box'), ('C10', 'Millifarad ( mF )'), ('C39', 'Nanoampere ( nA )'), ('C41', 'Nanofarad ( nF )'), ('C45', 'Nanometer ( nm )'), ('C62', 'Activity unit ( AU )'), ('CA', 'Canister ( Can )'), ('CMK', 'Square centimeter ( cm2 )'), ('CMQ', 'Cubic centimeter ( cm3 )'), ('CMT', 'Centimeter ( cm )'), ('CS', 'Case ( Case )'), ('CT', 'Carton ( Car )'), ('CTL', 'Centiliter ( Cl )'), ('D10', 'Siemens per meter ( S/m )'), ('D33', 'Tesla ( D )'), ('D41', 'Ton/Cubic meter ( t/m3 )'), ('DAY', 'Days ( d )'), ('DMT', 'Decimeter ( dm )'), ('DRM', 'DRUM'), ('EA', 'each (ST) ( ST )'), ('FAR', 'Farad ( F )'), ('FOT', 'Foot ( Foot )'), ('FTK', 'Square foot ( ft2 )'), ('FTQ', 'Cubic foot ( ft3 )'), ('G42', 'Microsiemens per centimeter ( microS/cm )'), ('GL', 'Gram/liter ( g/l )'), ('GLL', 'gallon ( gal )'), ('GM', 'Gram/square meter ( g/m2 )'), ('GPT', 'Gallon per thousand'), ('GRM', 'Gram ( g )'), ('H63', 'Milligram/Square centimeter ( mg/cm2 )'), ('HHP', 'Hydraulic Horse Power'), ('HLT', 'Hectoliter ( hl )'), ('HTZ', 'Hertz (1/second) ( Hz )'), ('HUR', 'Hours ( hrs )'), ('IE', 'Number of Persons ( PRS )'), ('INH', 'Inch ( “” )'), ('INK', 'Square inch ( Inch2 )'), ('IVL', 'Interval'), ('JOB', 'JOB'), ('KGM', 'Kilogram ( KG )'), ('KHZ', 'Kilohertz ( kHz )'), ('KMH', 'Kilometer/hour ( km/h )'), ('KMK', 'Square kilometer ( km2 )'), ('KMQ', 'Kilogram/cubic meter ( kg/m3 )'), ('KMT', 'Kilometer ( km )'), ('KSM', 'Kilogram/Square meter ( kg/m2 )'), ('KVT', 'Kilovolt ( kV )'), ('KWT', 'Kilowatt ( KW )'), ('LB', 'pounds '), ('LTR', 'Liter ( l )'), ('LVL', 'Level'), ('M', 'Meter ( m )'), ('MAN', 'Man'), ('MAW', 'Megawatt ( VA )'), ('MGM', 'Milligram ( mg )'), ('MHZ', 'Megahertz ( MHz )'), ('MIN', 'Minute ( min )'), ('MMK', 'Square millimeter ( mm2 )'), ('MMQ', 'Cubic millimeter ( mm3 )'), ('MMT', 'Millimeter ( mm )'), ('MON', 'Months ( Months )'), ('MTK', 'Square meter ( m2 )'), ('MTQ', 'Cubic meter ( m3 )'), ('OHM', 'Ohm ( Ohm )'), ('ONZ', 'Ounce ( oz )'), ('PAL', 'Pascal ( Pa )'), ('PF', 'Pallet ( PAL )'), ('PK', 'Pack ( PAK )'), ('PMP', 'pump'), ('RUN', 'run'), ('SH', 'Shrink ( Shrink )'), ('SK', 'Sack'), ('SMI', 'Mile ( mile )'), ('ST', 'Ton (short,2000 lb)'), ('TNE', 'Tonne ( t )'), ('TON', 'Ton (metric)'), ('VLT', 'Volt ( V )'), ('WEE', 'Weeks ( Weeks )'), ('WTT', 'Watt ( W )'), ('X03', 'Meter/Hour ( m/h )'), ('YDQ', 'Cubic yard ( yd3 )'), ('YRD', 'Yards ( yd )')], max_length=250, null=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=100)),
                ('unitValue_currencySold', models.CharField(default='EGP', max_length=250)),
                ('unitValue_amountEGP', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('unitValue_amountSold', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('unitValue_currencyExchangeRate', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('salesTotal', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('total', models.DecimalField(blank=True, decimal_places=5, max_digits=1100, null=True)),
                ('valueDifference', models.DecimalField(blank=True, decimal_places=5, default=0, max_digits=100, null=True)),
                ('totalTaxableFees', models.DecimalField(blank=True, decimal_places=5, default=0, max_digits=100, null=True)),
                ('netTotal', models.DecimalField(blank=True, decimal_places=5, default=0, max_digits=100, null=True)),
                ('itemsDiscount', models.DecimalField(blank=True, decimal_places=5, default=0, max_digits=100, null=True)),
                ('discount_rate', models.DecimalField(blank=True, decimal_places=5, default=0, max_digits=1000, null=True)),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=5, default=0, max_digits=1000, null=True)),
                ('internalCode', models.CharField(blank=True, max_length=250, null=True)),
                ('item_tax', models.DecimalField(blank=True, decimal_places=5, max_digits=1000, null=True)),
                ('total_taxes_fees', models.DecimalField(blank=True, decimal_places=5, max_digits=1000, null=True)),
                ('parent_id', models.CharField(blank=True, max_length=250, null=True)),
                ('parent_type', models.CharField(blank=True, max_length=250, null=True)),
                ('rd_tax', models.DecimalField(blank=True, decimal_places=5, max_digits=1000, null=True)),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='item.item')),
                ('tax_cat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tax.taxcategory')),
                ('taxableItems', models.ManyToManyField(blank=True, null=True, to='tax.taxableItems')),
            ],
        ),
        migrations.CreateModel(
            name='EInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploader_id', models.CharField(blank=True, max_length=250, null=True)),
                ('issuer_type', models.CharField(blank=True, choices=[('P', 'Person'), ('B', 'Business'), ('F', 'Forgien')], max_length=250, null=True)),
                ('issuer_id', models.CharField(blank=True, max_length=250, null=True)),
                ('issuer_name', models.CharField(blank=True, max_length=250, null=True)),
                ('issuer_address_branchId', models.CharField(blank=True, max_length=250, null=True)),
                ('issuer_address_country', models.CharField(blank=True, choices=[('AD', 'Andorra'), ('AE', 'United Arab Emirates'), ('AF', 'Afghanistan'), ('AG', 'Antigua and Barbuda'), ('AI', 'Anguilla'), ('AL', 'Albania'), ('AM', 'Armenia'), ('AO', 'Angola'), ('AQ', 'Antarctica'), ('AR', 'Argentina'), ('AS', 'American Samoa'), ('AT', 'Austria'), ('AU', 'Australia'), ('AW', 'Aruba'), ('AX', 'Åland Islands'), ('AZ', 'Azerbaijan'), ('BA', 'Bosnia and Herzegovina'), ('BB', 'Barbados'), ('BD', 'Bangladesh'), ('BE', 'Belgium'), ('BF', 'Burkina Faso'), ('BG', 'Bulgaria'), ('BH', 'Bahrain'), ('BI', 'Burundi'), ('BJ', 'Benin'), ('BL', 'Saint Barthelemy'), ('BM', 'Bermuda'), ('BN', 'Brunei Darussalam'), ('BO', 'Bolivia (Plurinational State of)'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BR', 'Brazil'), ('BS', 'Bahamas'), ('BT', 'Bhutan'), ('BV', 'Bouvet Island'), ('BW', 'Botswana'), ('BY', 'Belarus'), ('BZ', 'Belize'), ('CA', 'Canada'), ('CC', 'Cocos (Keeling) Islands'), ('CD', 'Congo (Democratic Republic of the)'), ('CF', 'Central African Republic'), ('CG', 'Congo'), ('CH', 'Switzerland'), ('CI', 'Cote d’Ivoire'), ('CK', 'Cook Islands'), ('CL', 'Chile'), ('CM', 'Cameroon'), ('CN', 'China'), ('CO', 'Colombia'), ('CR', 'Costa Rica'), ('CU', 'Cuba'), ('CV', 'Cabo Verde'), ('CW', 'Curaçao'), ('CX', 'Christmas Island'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DE', 'Germany'), ('DJ', 'Djibouti'), ('DK', 'Denmark'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('DZ', 'Algeria'), ('EC', 'Ecuador'), ('EE', 'Estonia'), ('EG', 'Egypt'), ('EH', 'Western Sahara'), ('ER', 'Eritrea'), ('ES', 'Spain'), ('ET', 'Ethiopia'), ('FI', 'Finland'), ('FJ', 'Fiji'), ('FK', 'Falkland Islands (Malvinas)'), ('FM', 'Micronesia (Federated States of)'), ('FO', 'Faroe Islands'), ('FR', 'France'), ('GA', 'Gabon'), ('GB', 'United Kingdom of Great Britain and Northern Ireland'), ('GD', 'Grenada'), ('GE', 'Georgia'), ('GF', 'French Guiana'), ('GG', 'Guernsey'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GL', 'Greenland'), ('GM', 'Gambia'), ('GN', 'Guinea'), ('GP', 'Guadeloupe'), ('GQ', 'Equatorial Guinea'), ('GR', 'Greece'), ('GS', 'South Georgia and the South Sandwich Islands'), ('GT', 'Guatemala'), ('GU', 'Guam'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HK', 'Hong Kong'), ('HM', 'Heard Island and McDonald Islands'), ('HN', 'Honduras'), ('HR', 'Croatia'), ('HT', 'Haiti'), ('HU', 'Hungary'), ('ID', 'Indonesia'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IM', 'Isle of Man'), ('IN', 'India'), ('IO', 'British Indian Ocean Territory'), ('IQ', 'Iraq'), ('IR', 'Iran (Islamic Republic of)'), ('IS', 'Iceland'), ('IT', 'Italy'), ('JE', 'Jersey'), ('JM', 'Jamaica'), ('JO', 'Jordan'), ('JP', 'Japan'), ('KE', 'Kenya'), ('KG', 'Kyrgyzstan'), ('KH', 'Cambodia'), ('KI', 'Kiribati'), ('KM', 'Comoros'), ('KN', 'Saint Kitts and Nevis'), ('KP', 'Korea (Democratic People’s Republic of)'), ('KR', 'Korea (Republic of)'), ('KW', 'Kuwait'), ('KY', 'Cayman Islands'), ('KZ', 'Kazakhstan'), ('LA', 'Lao People’s Democratic Republic'), ('LB', 'Lebanon'), ('LC', 'Saint Lucia'), ('LI', 'Liechtenstein'), ('LK', 'Sri Lanka'), ('LR', 'Liberia'), ('LS', 'Lesotho'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('LV', 'Latvia'), ('LY', 'Libya'), ('MA', 'Morocco'), ('MC', 'Monaco'), ('MD', 'Moldova (Republic of)'), ('ME', 'Montenegro'), ('MF', 'Saint Martin (French Part)'), ('MG', 'Madagascar'), ('MH', 'Marshall Islands'), ('MK', 'North Macedonia'), ('ML', 'Mali'), ('MM', 'Myanmar'), ('MN', 'Mongolia'), ('MO', 'Macao'), ('MP', 'Northern Mariana Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MS', 'Montserrat'), ('MT', 'Malta'), ('MU', 'Mauritius'), ('MV', 'Maldives'), ('MW', 'Malawi'), ('MX', 'Mexico'), ('MY', 'Malaysia'), ('MZ', 'Mozambique'), ('NA', 'Namibia'), ('NC', 'New Caledonia'), ('NE', 'Niger'), ('NF', 'Norfolk Island'), ('NG', 'Nigeria'), ('NI', 'Nicaragua'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('NP', 'Nepal'), ('NR', 'Nauru'), ('NU', 'Niue'), ('NZ', 'New Zealand'), ('OM', 'Oman'), ('PA', 'Panama'), ('PE', 'Peru'), ('PF', 'French Polynesia'), ('PG', 'Papua New Guinea'), ('PH', 'Philippines'), ('PK', 'Pakistan'), ('PL', 'Poland'), ('PM', 'Saint Pierre and Miquelon'), ('PN', 'Pitcairn'), ('PR', 'Puerto Rico'), ('PS', 'Palestinian, State of'), ('PT', 'Portugal'), ('PW', 'Palau'), ('PY', 'Paraguay'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RS', 'Serbia'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('SA', 'Saudi Arabia'), ('SB', 'Solomon Islands'), ('SC', 'Seychelles'), ('SD', 'Sudan'), ('SE', 'Sweden'), ('SG', 'Singapore'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('SI', 'Slovenia'), ('SJ', 'Svalbard and Jan Mayen'), ('SK', 'Slovakia'), ('SL', 'Sierra Leone'), ('SM', 'San Marino'), ('SN', 'Senegal'), ('SO', 'Somalia'), ('SR', 'Suriname'), ('SS', 'South Sudan'), ('ST', 'Sao Tome and Principe'), ('SV', 'El Salvador'), ('SX', 'Sint Maarten (Dutch Part)'), ('SY', 'Syrian Arab Republic'), ('SZ', 'Eswatini'), ('TC', 'Turks and Caicos Islands'), ('TD', 'Chad'), ('TF', 'French Southern Territories'), ('TG', 'Togo'), ('TH', 'Thailand'), ('TJ', 'Tajikistan'), ('TK', 'Tokelau'), ('TL', 'Timor-Leste'), ('TM', 'Turkmenistan'), ('TN', 'Tunisia'), ('TO', 'Tonga'), ('TR', 'Turkey'), ('TT', 'Trinidad and Tobago'), ('TV', 'Tuvalu'), ('TW', 'Taiwan (Province of China)'), ('TZ', 'Tanzania, United Republic of'), ('UA', 'Ukraine'), ('UG', 'Uganda'), ('UM', 'United States Minor Outlying Islands'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VA', 'Holy See'), ('VC', 'Saint Vincent and the Grenadines'), ('VE', 'Venezuela (Bolivarian Republic of)'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('VN', 'Viet Nam'), ('VU', 'Vanuatu'), ('WF', 'Wallis and Futuna'), ('WS', 'Samoa'), ('YE', 'Yemen'), ('YT', 'Mayotte'), ('ZA', 'South Africa'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=250, null=True)),
                ('issuer_address_governate', models.CharField(blank=True, max_length=250, null=True)),
                ('issuer_address_regionCity', models.CharField(blank=True, max_length=250, null=True)),
                ('issuer_address_street', models.CharField(blank=True, max_length=250, null=True)),
                ('issuer_address_buildingNumber', models.CharField(blank=True, max_length=250, null=True)),
                ('receiver_type', models.CharField(blank=True, choices=[('P', 'Person'), ('B', 'Business'), ('F', 'Forgien')], max_length=250, null=True)),
                ('receiver_id', models.CharField(blank=True, max_length=250, null=True)),
                ('receiver_name', models.CharField(blank=True, max_length=250, null=True)),
                ('receiver_address_branchId', models.CharField(blank=True, max_length=250, null=True)),
                ('receiver_address_country', models.CharField(blank=True, choices=[('AD', 'Andorra'), ('AE', 'United Arab Emirates'), ('AF', 'Afghanistan'), ('AG', 'Antigua and Barbuda'), ('AI', 'Anguilla'), ('AL', 'Albania'), ('AM', 'Armenia'), ('AO', 'Angola'), ('AQ', 'Antarctica'), ('AR', 'Argentina'), ('AS', 'American Samoa'), ('AT', 'Austria'), ('AU', 'Australia'), ('AW', 'Aruba'), ('AX', 'Åland Islands'), ('AZ', 'Azerbaijan'), ('BA', 'Bosnia and Herzegovina'), ('BB', 'Barbados'), ('BD', 'Bangladesh'), ('BE', 'Belgium'), ('BF', 'Burkina Faso'), ('BG', 'Bulgaria'), ('BH', 'Bahrain'), ('BI', 'Burundi'), ('BJ', 'Benin'), ('BL', 'Saint Barthelemy'), ('BM', 'Bermuda'), ('BN', 'Brunei Darussalam'), ('BO', 'Bolivia (Plurinational State of)'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BR', 'Brazil'), ('BS', 'Bahamas'), ('BT', 'Bhutan'), ('BV', 'Bouvet Island'), ('BW', 'Botswana'), ('BY', 'Belarus'), ('BZ', 'Belize'), ('CA', 'Canada'), ('CC', 'Cocos (Keeling) Islands'), ('CD', 'Congo (Democratic Republic of the)'), ('CF', 'Central African Republic'), ('CG', 'Congo'), ('CH', 'Switzerland'), ('CI', 'Cote d’Ivoire'), ('CK', 'Cook Islands'), ('CL', 'Chile'), ('CM', 'Cameroon'), ('CN', 'China'), ('CO', 'Colombia'), ('CR', 'Costa Rica'), ('CU', 'Cuba'), ('CV', 'Cabo Verde'), ('CW', 'Curaçao'), ('CX', 'Christmas Island'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DE', 'Germany'), ('DJ', 'Djibouti'), ('DK', 'Denmark'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('DZ', 'Algeria'), ('EC', 'Ecuador'), ('EE', 'Estonia'), ('EG', 'Egypt'), ('EH', 'Western Sahara'), ('ER', 'Eritrea'), ('ES', 'Spain'), ('ET', 'Ethiopia'), ('FI', 'Finland'), ('FJ', 'Fiji'), ('FK', 'Falkland Islands (Malvinas)'), ('FM', 'Micronesia (Federated States of)'), ('FO', 'Faroe Islands'), ('FR', 'France'), ('GA', 'Gabon'), ('GB', 'United Kingdom of Great Britain and Northern Ireland'), ('GD', 'Grenada'), ('GE', 'Georgia'), ('GF', 'French Guiana'), ('GG', 'Guernsey'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GL', 'Greenland'), ('GM', 'Gambia'), ('GN', 'Guinea'), ('GP', 'Guadeloupe'), ('GQ', 'Equatorial Guinea'), ('GR', 'Greece'), ('GS', 'South Georgia and the South Sandwich Islands'), ('GT', 'Guatemala'), ('GU', 'Guam'), ('GW', 'Guinea-Bissau'), ('GY', 'Guyana'), ('HK', 'Hong Kong'), ('HM', 'Heard Island and McDonald Islands'), ('HN', 'Honduras'), ('HR', 'Croatia'), ('HT', 'Haiti'), ('HU', 'Hungary'), ('ID', 'Indonesia'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IM', 'Isle of Man'), ('IN', 'India'), ('IO', 'British Indian Ocean Territory'), ('IQ', 'Iraq'), ('IR', 'Iran (Islamic Republic of)'), ('IS', 'Iceland'), ('IT', 'Italy'), ('JE', 'Jersey'), ('JM', 'Jamaica'), ('JO', 'Jordan'), ('JP', 'Japan'), ('KE', 'Kenya'), ('KG', 'Kyrgyzstan'), ('KH', 'Cambodia'), ('KI', 'Kiribati'), ('KM', 'Comoros'), ('KN', 'Saint Kitts and Nevis'), ('KP', 'Korea (Democratic People’s Republic of)'), ('KR', 'Korea (Republic of)'), ('KW', 'Kuwait'), ('KY', 'Cayman Islands'), ('KZ', 'Kazakhstan'), ('LA', 'Lao People’s Democratic Republic'), ('LB', 'Lebanon'), ('LC', 'Saint Lucia'), ('LI', 'Liechtenstein'), ('LK', 'Sri Lanka'), ('LR', 'Liberia'), ('LS', 'Lesotho'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('LV', 'Latvia'), ('LY', 'Libya'), ('MA', 'Morocco'), ('MC', 'Monaco'), ('MD', 'Moldova (Republic of)'), ('ME', 'Montenegro'), ('MF', 'Saint Martin (French Part)'), ('MG', 'Madagascar'), ('MH', 'Marshall Islands'), ('MK', 'North Macedonia'), ('ML', 'Mali'), ('MM', 'Myanmar'), ('MN', 'Mongolia'), ('MO', 'Macao'), ('MP', 'Northern Mariana Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MS', 'Montserrat'), ('MT', 'Malta'), ('MU', 'Mauritius'), ('MV', 'Maldives'), ('MW', 'Malawi'), ('MX', 'Mexico'), ('MY', 'Malaysia'), ('MZ', 'Mozambique'), ('NA', 'Namibia'), ('NC', 'New Caledonia'), ('NE', 'Niger'), ('NF', 'Norfolk Island'), ('NG', 'Nigeria'), ('NI', 'Nicaragua'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('NP', 'Nepal'), ('NR', 'Nauru'), ('NU', 'Niue'), ('NZ', 'New Zealand'), ('OM', 'Oman'), ('PA', 'Panama'), ('PE', 'Peru'), ('PF', 'French Polynesia'), ('PG', 'Papua New Guinea'), ('PH', 'Philippines'), ('PK', 'Pakistan'), ('PL', 'Poland'), ('PM', 'Saint Pierre and Miquelon'), ('PN', 'Pitcairn'), ('PR', 'Puerto Rico'), ('PS', 'Palestinian, State of'), ('PT', 'Portugal'), ('PW', 'Palau'), ('PY', 'Paraguay'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RS', 'Serbia'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('SA', 'Saudi Arabia'), ('SB', 'Solomon Islands'), ('SC', 'Seychelles'), ('SD', 'Sudan'), ('SE', 'Sweden'), ('SG', 'Singapore'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('SI', 'Slovenia'), ('SJ', 'Svalbard and Jan Mayen'), ('SK', 'Slovakia'), ('SL', 'Sierra Leone'), ('SM', 'San Marino'), ('SN', 'Senegal'), ('SO', 'Somalia'), ('SR', 'Suriname'), ('SS', 'South Sudan'), ('ST', 'Sao Tome and Principe'), ('SV', 'El Salvador'), ('SX', 'Sint Maarten (Dutch Part)'), ('SY', 'Syrian Arab Republic'), ('SZ', 'Eswatini'), ('TC', 'Turks and Caicos Islands'), ('TD', 'Chad'), ('TF', 'French Southern Territories'), ('TG', 'Togo'), ('TH', 'Thailand'), ('TJ', 'Tajikistan'), ('TK', 'Tokelau'), ('TL', 'Timor-Leste'), ('TM', 'Turkmenistan'), ('TN', 'Tunisia'), ('TO', 'Tonga'), ('TR', 'Turkey'), ('TT', 'Trinidad and Tobago'), ('TV', 'Tuvalu'), ('TW', 'Taiwan (Province of China)'), ('TZ', 'Tanzania, United Republic of'), ('UA', 'Ukraine'), ('UG', 'Uganda'), ('UM', 'United States Minor Outlying Islands'), ('US', 'United States of America'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VA', 'Holy See'), ('VC', 'Saint Vincent and the Grenadines'), ('VE', 'Venezuela (Bolivarian Republic of)'), ('VG', 'Virgin Islands (British)'), ('VI', 'Virgin Islands (U.S.)'), ('VN', 'Viet Nam'), ('VU', 'Vanuatu'), ('WF', 'Wallis and Futuna'), ('WS', 'Samoa'), ('YE', 'Yemen'), ('YT', 'Mayotte'), ('ZA', 'South Africa'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=250, null=True)),
                ('receiver_address_governate', models.CharField(blank=True, max_length=250, null=True)),
                ('receiver_address_regionCity', models.CharField(blank=True, max_length=250, null=True)),
                ('receiver_address_street', models.CharField(blank=True, max_length=250, null=True)),
                ('receiver_address_buildingNumber', models.CharField(blank=True, max_length=250, null=True)),
                ('documentType', models.CharField(choices=[('i', 'Invoice'), ('d', 'Debit Note'), ('c', 'Credit Note')], max_length=250)),
                ('documentTypeVersion', models.CharField(choices=[('1.0', '1.0'), ('0.9', '0.9')], max_length=250)),
                ('dateTimeIssued', models.DateTimeField(blank=True, null=True)),
                ('taxpayerActivityCode', models.CharField(max_length=250)),
                ('internalId', models.CharField(max_length=250)),
                ('purchaseOrderReference', models.CharField(blank=True, max_length=250, null=True)),
                ('purchaseOrderDescription', models.CharField(blank=True, max_length=250, null=True)),
                ('salesOrderReference', models.CharField(blank=True, max_length=250, null=True)),
                ('salesOrderDescription', models.CharField(blank=True, max_length=250, null=True)),
                ('proformaInvoiceNumber', models.CharField(blank=True, max_length=50, null=True)),
                ('taxableitem', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('datetimestr', models.CharField(blank=True, max_length=250, null=True)),
                ('totalSalesAmount', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('totalDiscountAmount', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('netAmount', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('extraDiscountAmount', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('totalItemsDiscountAmount', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('totalAmount', models.DecimalField(blank=True, decimal_places=5, max_digits=100, null=True)),
                ('submissionId', models.CharField(blank=True, max_length=500, null=True)),
                ('uuid', models.CharField(blank=True, max_length=500, null=True)),
                ('long_id', models.CharField(blank=True, max_length=500, null=True)),
                ('docstatus', models.CharField(blank=True, max_length=500, null=True)),
                ('errro_log', models.CharField(blank=True, max_length=500, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('message_Serv', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Valid', 'Valid'), ('Invalid', 'Invalid'), ('Submitted', 'Submitted'), ('Valid To Cancel', 'Valid To Cancel'), ('Cancelled', 'Cancelled'), ('Rejected', 'Rejected'), ('Not Send', 'Not Send')], default='Submitted', max_length=500, null=True)),
                ('environment', models.CharField(blank=True, choices=[('Production', 'Production'), ('Pre Production', 'Pre Production')], max_length=250, null=True)),
                ('invoiceLines', models.ManyToManyField(to='invoice.InvoiceLine')),
                ('payer_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='payer.payeraccount')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='invoice.payment')),
                ('receiver_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='home.receiver')),
                ('taxTotals', models.ManyToManyField(blank=True, null=True, to='tax.TaxTotals')),
            ],
        ),
    ]
